// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rendering renders correctly 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="outer"
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseMove={[Function]}
    style={
      Object {
        "height": undefined,
        "width": undefined,
      }
    }
  >
    <div
      className="overflow"
      onScroll={[Function]}
      onWheel={[Function]}
    >
      <div
        className="inner"
        style={
          Object {
            "marginRight": -1,
          }
        }
      />
    </div>
    <div
      className="track trackHidden"
      style={
        Object {
          "height": -4,
          "top": 2,
        }
      }
    >
      <div
        className="handler"
        style={
          Object {
            "height": 0,
            "top": 0,
          }
        }
      />
    </div>
  </div>,
  "nodes": Array [
    <div
      className="outer"
      onMouseDown={[Function]}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      onMouseMove={[Function]}
      style={
        Object {
          "height": undefined,
          "width": undefined,
        }
      }
    >
      <div
        className="overflow"
        onScroll={[Function]}
        onWheel={[Function]}
      >
        <div
          className="inner"
          style={
            Object {
              "marginRight": -1,
            }
          }
        />
      </div>
      <div
        className="track trackHidden"
        style={
          Object {
            "height": -4,
            "top": 2,
          }
        }
      >
        <div
          className="handler"
          style={
            Object {
              "height": 0,
              "top": 0,
            }
          }
        />
      </div>
    </div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ScrollArea
        minHandlerHeight={70}
        testInnerHeight={0}
        trackHidden={false}
        trackHideTime={1000}
        trackMargin={4}
        trackVisible={false}
      />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ScrollArea {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "minHandlerHeight": 70,
          "testInnerHeight": 0,
          "trackHidden": false,
          "trackHideTime": 1000,
          "trackMargin": 4,
          "trackVisible": false,
        },
        "refs": Object {},
        "state": Object {
          "handlerHeight": 0,
          "innerHeight": 0,
          "innerMargin": -1,
          "isDragging": false,
          "outerHeight": 0,
          "trackActive": false,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="outer"
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          style={
            Object {
              "height": undefined,
              "width": undefined,
            }
          }
        >
          <div
            className="overflow"
            onScroll={[Function]}
            onWheel={[Function]}
          >
            <div
              className="inner"
              style={
                Object {
                  "marginRight": -1,
                }
              }
            />
          </div>
          <div
            className="track trackHidden"
            style={
              Object {
                "height": -4,
                "top": 2,
              }
            }
          >
            <div
              className="handler"
              style={
                Object {
                  "height": 0,
                  "top": 0,
                }
              }
            />
          </div>
        </div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="outer"
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          style={
            Object {
              "height": undefined,
              "width": undefined,
            }
          }
        >
          <div
            className="overflow"
            onScroll={[Function]}
            onWheel={[Function]}
          >
            <div
              className="inner"
              style={
                Object {
                  "marginRight": -1,
                }
              }
            />
          </div>
          <div
            className="track trackHidden"
            style={
              Object {
                "height": -4,
                "top": 2,
              }
            }
          >
            <div
              className="handler"
              style={
                Object {
                  "height": 0,
                  "top": 0,
                }
              }
            />
          </div>
        </div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ScrollArea
    minHandlerHeight={70}
    testInnerHeight={0}
    trackHidden={false}
    trackHideTime={1000}
    trackMargin={4}
    trackVisible={false}
  />,
}
`;
